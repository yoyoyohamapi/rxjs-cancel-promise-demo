{"dependencies":[{"name":"/Users/woo/Projects/2018/rxjs-cancel-promise-demo/package.json","includedInParent":true,"mtime":1519633766323},{"name":"/Users/woo/Projects/2018/rxjs-cancel-promise-demo/node_modules/rxjs/package.json","includedInParent":true,"mtime":1513892921000},{"name":"../Subscriber","loc":{"line":7,"column":27}},{"name":"../Subscription","loc":{"line":8,"column":29}},{"name":"../Observable","loc":{"line":9,"column":27}},{"name":"../Subject","loc":{"line":10,"column":24}},{"name":"../util/Map","loc":{"line":11,"column":20}},{"name":"../util/FastMap","loc":{"line":12,"column":24}}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Subscription_1 = require('../Subscription');\nvar Observable_1 = require('../Observable');\nvar Subject_1 = require('../Subject');\nvar Map_1 = require('../util/Map');\nvar FastMap_1 = require('../util/FastMap');\n/* tslint:enable:max-line-length */\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nfunction groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return function (source) {\n        return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n    };\n}\nexports.groupBy = groupBy;\nvar GroupByOperator = (function () {\n    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n    }\n    GroupByOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n    };\n    return GroupByOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupBySubscriber = (function (_super) {\n    __extends(GroupBySubscriber, _super);\n    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n        this.groups = null;\n        this.attemptedToUnsubscribe = false;\n        this.count = 0;\n    }\n    GroupBySubscriber.prototype._next = function (value) {\n        var key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    };\n    GroupBySubscriber.prototype._group = function (value, key) {\n        var groups = this.groups;\n        if (!groups) {\n            groups = this.groups = typeof key === 'string' ? new FastMap_1.FastMap() : new Map_1.Map();\n        }\n        var group = groups.get(key);\n        var element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            group = this.subjectSelector ? this.subjectSelector() : new Subject_1.Subject();\n            groups.set(key, group);\n            var groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                var duration = void 0;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    };\n    GroupBySubscriber.prototype._error = function (err) {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    };\n    GroupBySubscriber.prototype._complete = function () {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    };\n    GroupBySubscriber.prototype.removeGroup = function (key) {\n        this.groups.delete(key);\n    };\n    GroupBySubscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                _super.prototype.unsubscribe.call(this);\n            }\n        }\n    };\n    return GroupBySubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupDurationSubscriber = (function (_super) {\n    __extends(GroupDurationSubscriber, _super);\n    function GroupDurationSubscriber(key, group, parent) {\n        _super.call(this, group);\n        this.key = key;\n        this.group = group;\n        this.parent = parent;\n    }\n    GroupDurationSubscriber.prototype._next = function (value) {\n        this.complete();\n    };\n    GroupDurationSubscriber.prototype._unsubscribe = function () {\n        var _a = this, parent = _a.parent, key = _a.key;\n        this.key = this.parent = null;\n        if (parent) {\n            parent.removeGroup(key);\n        }\n    };\n    return GroupDurationSubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nvar GroupedObservable = (function (_super) {\n    __extends(GroupedObservable, _super);\n    function GroupedObservable(key, groupSubject, refCountSubscription) {\n        _super.call(this);\n        this.key = key;\n        this.groupSubject = groupSubject;\n        this.refCountSubscription = refCountSubscription;\n    }\n    GroupedObservable.prototype._subscribe = function (subscriber) {\n        var subscription = new Subscription_1.Subscription();\n        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    };\n    return GroupedObservable;\n}(Observable_1.Observable));\nexports.GroupedObservable = GroupedObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerRefCountSubscription = (function (_super) {\n    __extends(InnerRefCountSubscription, _super);\n    function InnerRefCountSubscription(parent) {\n        _super.call(this);\n        this.parent = parent;\n        parent.count++;\n    }\n    InnerRefCountSubscription.prototype.unsubscribe = function () {\n        var parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            _super.prototype.unsubscribe.call(this);\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    };\n    return InnerRefCountSubscription;\n}(Subscription_1.Subscription));\n//# sourceMappingURL=groupBy.js.map","map":{"mappings":[{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/rxjs/operators/groupBy.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}}],"sources":{"node_modules/rxjs/operators/groupBy.js":"\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Subscription_1 = require('../Subscription');\nvar Observable_1 = require('../Observable');\nvar Subject_1 = require('../Subject');\nvar Map_1 = require('../util/Map');\nvar FastMap_1 = require('../util/FastMap');\n/* tslint:enable:max-line-length */\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nfunction groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return function (source) {\n        return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n    };\n}\nexports.groupBy = groupBy;\nvar GroupByOperator = (function () {\n    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n    }\n    GroupByOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n    };\n    return GroupByOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupBySubscriber = (function (_super) {\n    __extends(GroupBySubscriber, _super);\n    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n        this.groups = null;\n        this.attemptedToUnsubscribe = false;\n        this.count = 0;\n    }\n    GroupBySubscriber.prototype._next = function (value) {\n        var key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    };\n    GroupBySubscriber.prototype._group = function (value, key) {\n        var groups = this.groups;\n        if (!groups) {\n            groups = this.groups = typeof key === 'string' ? new FastMap_1.FastMap() : new Map_1.Map();\n        }\n        var group = groups.get(key);\n        var element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            group = this.subjectSelector ? this.subjectSelector() : new Subject_1.Subject();\n            groups.set(key, group);\n            var groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                var duration = void 0;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    };\n    GroupBySubscriber.prototype._error = function (err) {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    };\n    GroupBySubscriber.prototype._complete = function () {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    };\n    GroupBySubscriber.prototype.removeGroup = function (key) {\n        this.groups.delete(key);\n    };\n    GroupBySubscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                _super.prototype.unsubscribe.call(this);\n            }\n        }\n    };\n    return GroupBySubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupDurationSubscriber = (function (_super) {\n    __extends(GroupDurationSubscriber, _super);\n    function GroupDurationSubscriber(key, group, parent) {\n        _super.call(this, group);\n        this.key = key;\n        this.group = group;\n        this.parent = parent;\n    }\n    GroupDurationSubscriber.prototype._next = function (value) {\n        this.complete();\n    };\n    GroupDurationSubscriber.prototype._unsubscribe = function () {\n        var _a = this, parent = _a.parent, key = _a.key;\n        this.key = this.parent = null;\n        if (parent) {\n            parent.removeGroup(key);\n        }\n    };\n    return GroupDurationSubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nvar GroupedObservable = (function (_super) {\n    __extends(GroupedObservable, _super);\n    function GroupedObservable(key, groupSubject, refCountSubscription) {\n        _super.call(this);\n        this.key = key;\n        this.groupSubject = groupSubject;\n        this.refCountSubscription = refCountSubscription;\n    }\n    GroupedObservable.prototype._subscribe = function (subscriber) {\n        var subscription = new Subscription_1.Subscription();\n        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    };\n    return GroupedObservable;\n}(Observable_1.Observable));\nexports.GroupedObservable = GroupedObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerRefCountSubscription = (function (_super) {\n    __extends(InnerRefCountSubscription, _super);\n    function InnerRefCountSubscription(parent) {\n        _super.call(this);\n        this.parent = parent;\n        parent.count++;\n    }\n    InnerRefCountSubscription.prototype.unsubscribe = function () {\n        var parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            _super.prototype.unsubscribe.call(this);\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    };\n    return InnerRefCountSubscription;\n}(Subscription_1.Subscription));\n//# sourceMappingURL=groupBy.js.map"},"lineCount":276}},"hash":"0096b5d4260a280fd5af71b7f5300718","cacheData":{"env":{}}}