{"dependencies":[{"name":"/Users/woo/Projects/2018/rxjs-cancel-promise-demo/package.json","includedInParent":true,"mtime":1519633766323},{"name":"/Users/woo/Projects/2018/rxjs-cancel-promise-demo/node_modules/rxjs/package.json","includedInParent":true,"mtime":1513892921000},{"name":"../OuterSubscriber","loc":{"line":7,"column":32}},{"name":"../util/subscribeToResult","loc":{"line":8,"column":34}}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nfunction exhaustMap(project, resultSelector) {\n    return function (source) { return source.lift(new SwitchFirstMapOperator(project, resultSelector)); };\n}\nexports.exhaustMap = exhaustMap;\nvar SwitchFirstMapOperator = (function () {\n    function SwitchFirstMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchFirstMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchFirstMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchFirstMapSubscriber = (function (_super) {\n    __extends(SwitchFirstMapSubscriber, _super);\n    function SwitchFirstMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.hasSubscription = false;\n        this.hasCompleted = false;\n        this.index = 0;\n    }\n    SwitchFirstMapSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.tryNext = function (value) {\n        var index = this.index++;\n        var destination = this.destination;\n        try {\n            var result = this.project(value, index);\n            this.hasSubscription = true;\n            this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        try {\n            var result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n            destination.next(result);\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    SwitchFirstMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=exhaustMap.js.map","map":{"mappings":[{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/rxjs/operators/exhaustMap.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}}],"sources":{"node_modules/rxjs/operators/exhaustMap.js":"\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nfunction exhaustMap(project, resultSelector) {\n    return function (source) { return source.lift(new SwitchFirstMapOperator(project, resultSelector)); };\n}\nexports.exhaustMap = exhaustMap;\nvar SwitchFirstMapOperator = (function () {\n    function SwitchFirstMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchFirstMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchFirstMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchFirstMapSubscriber = (function (_super) {\n    __extends(SwitchFirstMapSubscriber, _super);\n    function SwitchFirstMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.hasSubscription = false;\n        this.hasCompleted = false;\n        this.index = 0;\n    }\n    SwitchFirstMapSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.tryNext = function (value) {\n        var index = this.index++;\n        var destination = this.destination;\n        try {\n            var result = this.project(value, index);\n            this.hasSubscription = true;\n            this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        try {\n            var result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n            destination.next(result);\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    };\n    SwitchFirstMapSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    SwitchFirstMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=exhaustMap.js.map"},"lineCount":138}},"hash":"b661eec27ef772b9e1f1a2fe555156fa","cacheData":{"env":{}}}