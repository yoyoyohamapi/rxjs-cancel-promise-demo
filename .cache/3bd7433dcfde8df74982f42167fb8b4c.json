{"dependencies":[{"name":"/Users/woo/Projects/2018/rxjs-cancel-promise-demo/package.json","includedInParent":true,"mtime":1519633766323},{"name":"/Users/woo/Projects/2018/rxjs-cancel-promise-demo/node_modules/rxjs/package.json","includedInParent":true,"mtime":1513892921000},{"name":"../util/isArray","loc":{"line":7,"column":24}},{"name":"../util/isArrayLike","loc":{"line":8,"column":28}},{"name":"../util/isPromise","loc":{"line":9,"column":26}},{"name":"./PromiseObservable","loc":{"line":10,"column":34}},{"name":"./IteratorObservable","loc":{"line":11,"column":35}},{"name":"./ArrayObservable","loc":{"line":12,"column":32}},{"name":"./ArrayLikeObservable","loc":{"line":13,"column":36}},{"name":"../symbol/iterator","loc":{"line":14,"column":25}},{"name":"../Observable","loc":{"line":15,"column":27}},{"name":"../operators/observeOn","loc":{"line":16,"column":26}},{"name":"../symbol/observable","loc":{"line":17,"column":27}}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isArray_1 = require('../util/isArray');\nvar isArrayLike_1 = require('../util/isArrayLike');\nvar isPromise_1 = require('../util/isPromise');\nvar PromiseObservable_1 = require('./PromiseObservable');\nvar IteratorObservable_1 = require('./IteratorObservable');\nvar ArrayObservable_1 = require('./ArrayObservable');\nvar ArrayLikeObservable_1 = require('./ArrayLikeObservable');\nvar iterator_1 = require('../symbol/iterator');\nvar Observable_1 = require('../Observable');\nvar observeOn_1 = require('../operators/observeOn');\nvar observable_1 = require('../symbol/observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromObservable = (function (_super) {\n    __extends(FromObservable, _super);\n    function FromObservable(ish, scheduler) {\n        _super.call(this, null);\n        this.ish = ish;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable from an Array, an array-like object, a Promise, an\n     * iterable object, or an Observable-like object.\n     *\n     * <span class=\"informal\">Converts almost anything to an Observable.</span>\n     *\n     * <img src=\"./img/from.png\" width=\"100%\">\n     *\n     * Convert various other objects and data types into Observables. `from`\n     * converts a Promise or an array-like or an\n     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n     * object into an Observable that emits the items in that promise or array or\n     * iterable. A String, in this context, is treated as an array of characters.\n     * Observable-like objects (contains a function named with the ES2015 Symbol\n     * for Observable) can also be converted through this operator.\n     *\n     * @example <caption>Converts an array to an Observable</caption>\n     * var array = [10, 20, 30];\n     * var result = Rx.Observable.from(array);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 10 20 30\n     *\n     * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n     * function* generateDoubles(seed) {\n     *   var i = seed;\n     *   while (true) {\n     *     yield i;\n     *     i = 2 * i; // double it\n     *   }\n     * }\n     *\n     * var iterator = generateDoubles(3);\n     * var result = Rx.Observable.from(iterator).take(10);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 3 6 12 24 48 96 192 384 768 1536\n     *\n     * @see {@link create}\n     * @see {@link fromEvent}\n     * @see {@link fromEventPattern}\n     * @see {@link fromPromise}\n     *\n     * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n     * Observable-like, an Array, an iterable or an array-like object to be\n     * converted.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * emissions of values.\n     * @return {Observable<T>} The Observable whose values are originally from the\n     * input object that was converted.\n     * @static true\n     * @name from\n     * @owner Observable\n     */\n    FromObservable.create = function (ish, scheduler) {\n        if (ish != null) {\n            if (typeof ish[observable_1.observable] === 'function') {\n                if (ish instanceof Observable_1.Observable && !scheduler) {\n                    return ish;\n                }\n                return new FromObservable(ish, scheduler);\n            }\n            else if (isArray_1.isArray(ish)) {\n                return new ArrayObservable_1.ArrayObservable(ish, scheduler);\n            }\n            else if (isPromise_1.isPromise(ish)) {\n                return new PromiseObservable_1.PromiseObservable(ish, scheduler);\n            }\n            else if (typeof ish[iterator_1.iterator] === 'function' || typeof ish === 'string') {\n                return new IteratorObservable_1.IteratorObservable(ish, scheduler);\n            }\n            else if (isArrayLike_1.isArrayLike(ish)) {\n                return new ArrayLikeObservable_1.ArrayLikeObservable(ish, scheduler);\n            }\n        }\n        throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n    };\n    FromObservable.prototype._subscribe = function (subscriber) {\n        var ish = this.ish;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            return ish[observable_1.observable]().subscribe(subscriber);\n        }\n        else {\n            return ish[observable_1.observable]().subscribe(new observeOn_1.ObserveOnSubscriber(subscriber, scheduler, 0));\n        }\n    };\n    return FromObservable;\n}(Observable_1.Observable));\nexports.FromObservable = FromObservable;\n//# sourceMappingURL=FromObservable.js.map","map":{"mappings":[{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/rxjs/observable/FromObservable.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}}],"sources":{"node_modules/rxjs/observable/FromObservable.js":"\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isArray_1 = require('../util/isArray');\nvar isArrayLike_1 = require('../util/isArrayLike');\nvar isPromise_1 = require('../util/isPromise');\nvar PromiseObservable_1 = require('./PromiseObservable');\nvar IteratorObservable_1 = require('./IteratorObservable');\nvar ArrayObservable_1 = require('./ArrayObservable');\nvar ArrayLikeObservable_1 = require('./ArrayLikeObservable');\nvar iterator_1 = require('../symbol/iterator');\nvar Observable_1 = require('../Observable');\nvar observeOn_1 = require('../operators/observeOn');\nvar observable_1 = require('../symbol/observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromObservable = (function (_super) {\n    __extends(FromObservable, _super);\n    function FromObservable(ish, scheduler) {\n        _super.call(this, null);\n        this.ish = ish;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable from an Array, an array-like object, a Promise, an\n     * iterable object, or an Observable-like object.\n     *\n     * <span class=\"informal\">Converts almost anything to an Observable.</span>\n     *\n     * <img src=\"./img/from.png\" width=\"100%\">\n     *\n     * Convert various other objects and data types into Observables. `from`\n     * converts a Promise or an array-like or an\n     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\n     * object into an Observable that emits the items in that promise or array or\n     * iterable. A String, in this context, is treated as an array of characters.\n     * Observable-like objects (contains a function named with the ES2015 Symbol\n     * for Observable) can also be converted through this operator.\n     *\n     * @example <caption>Converts an array to an Observable</caption>\n     * var array = [10, 20, 30];\n     * var result = Rx.Observable.from(array);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 10 20 30\n     *\n     * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\n     * function* generateDoubles(seed) {\n     *   var i = seed;\n     *   while (true) {\n     *     yield i;\n     *     i = 2 * i; // double it\n     *   }\n     * }\n     *\n     * var iterator = generateDoubles(3);\n     * var result = Rx.Observable.from(iterator).take(10);\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following:\n     * // 3 6 12 24 48 96 192 384 768 1536\n     *\n     * @see {@link create}\n     * @see {@link fromEvent}\n     * @see {@link fromEventPattern}\n     * @see {@link fromPromise}\n     *\n     * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\n     * Observable-like, an Array, an iterable or an array-like object to be\n     * converted.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n     * emissions of values.\n     * @return {Observable<T>} The Observable whose values are originally from the\n     * input object that was converted.\n     * @static true\n     * @name from\n     * @owner Observable\n     */\n    FromObservable.create = function (ish, scheduler) {\n        if (ish != null) {\n            if (typeof ish[observable_1.observable] === 'function') {\n                if (ish instanceof Observable_1.Observable && !scheduler) {\n                    return ish;\n                }\n                return new FromObservable(ish, scheduler);\n            }\n            else if (isArray_1.isArray(ish)) {\n                return new ArrayObservable_1.ArrayObservable(ish, scheduler);\n            }\n            else if (isPromise_1.isPromise(ish)) {\n                return new PromiseObservable_1.PromiseObservable(ish, scheduler);\n            }\n            else if (typeof ish[iterator_1.iterator] === 'function' || typeof ish === 'string') {\n                return new IteratorObservable_1.IteratorObservable(ish, scheduler);\n            }\n            else if (isArrayLike_1.isArrayLike(ish)) {\n                return new ArrayLikeObservable_1.ArrayLikeObservable(ish, scheduler);\n            }\n        }\n        throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\n    };\n    FromObservable.prototype._subscribe = function (subscriber) {\n        var ish = this.ish;\n        var scheduler = this.scheduler;\n        if (scheduler == null) {\n            return ish[observable_1.observable]().subscribe(subscriber);\n        }\n        else {\n            return ish[observable_1.observable]().subscribe(new observeOn_1.ObserveOnSubscriber(subscriber, scheduler, 0));\n        }\n    };\n    return FromObservable;\n}(Observable_1.Observable));\nexports.FromObservable = FromObservable;\n//# sourceMappingURL=FromObservable.js.map"},"lineCount":122}},"hash":"e2f40fd2d6a8b7ee8fb67350e676ed1d","cacheData":{"env":{}}}